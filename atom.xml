<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>曹艺瀚的个人网站</title>
  
  
  <link href="https://caoyihan.com/atom.xml" rel="self"/>
  
  <link href="https://caoyihan.com/"/>
  <updated>2024-06-11T11:48:24.282Z</updated>
  <id>https://caoyihan.com/</id>
  
  <author>
    <name>August曹艺瀚</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>保持无聊也是开始工作的好方法</title>
    <link href="https://caoyihan.com/2024/06/11/do-nothing-and-get-started/"/>
    <id>https://caoyihan.com/2024/06/11/do-nothing-and-get-started/</id>
    <published>2024-06-11T03:18:49.000Z</published>
    <updated>2024-06-11T11:48:24.282Z</updated>
    
    <content type="html"><![CDATA[<p>保持无聊也是开始工作的好方法。</p><p>当各种信息流进入脑子的时候，大脑顺着信息流，似乎容易停止思考。但当封印了X、公众号、YouTube，以及其他各类信息流渠道的时候，会更容易感觉到无聊，但其实也把大脑空了出来。这时就更容易进入深度思考，也更容易进入工作状态。</p><p>所以有时感觉到无聊可能是好事，可以主动让自己感觉到无聊，也应该提升自己对无聊的忍受力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;保持无聊也是开始工作的好方法。&lt;/p&gt;
&lt;p&gt;当各种信息流进入脑子的时候，大脑顺着信息流，似乎容易停止思考。但当封印了X、公众号、YouTube，以及其他各类信息流渠道的时候，会更容易感觉到无聊，但其实也把大脑空了出来。这时就更容易进入深度思考，也更容易进入工作状态。&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>你为什么不应该对你的创业想法保密</title>
    <link href="https://caoyihan.com/2024/06/08/why-you-shouldnot-keep-your-startup-idea-secret/"/>
    <id>https://caoyihan.com/2024/06/08/why-you-shouldnot-keep-your-startup-idea-secret/</id>
    <published>2024-06-08T12:35:11.000Z</published>
    <updated>2024-06-08T12:35:11.804Z</updated>
    
    <content type="html"><![CDATA[<p>今天读到Chris Dixon的一篇文章<a href="https://cdixon.org/2009/08/22/why-you-shouldnt-keep-your-startup-idea-secret">你为什么不应该对你的创业想法保密</a>。Chris Dixon是a16z的普通合伙人，也是Hunch的联创。</p><p>Chris Dixon认为，创业的「隐身模式」是危险的，应该和任何愿意谈论的人谈论自己的创业想法，包括投资人、创业者、业内人士、朋友、或者路人。</p><p>与人交流有很多好处。可以获得改进建议；发现缺陷；可以了解到行业相关信息；了解到同类竞品；可以更好地了解到人们对于这个产品及功能的兴奋程度。也可以完善自己的销售，或者对投资人的路演。也可能甚至发现这是一个馊主意，免去走弯路的麻烦。</p><p>而就被窃取想法的担忧而言。首先，世界上只有极少数人，能偷窃你的想法并真正实现。因为很多人有自己的工作，而且大部分创业者都是有道德和诚信的，有道德的企业家不会复制你的想法。而投资人，要么不喜欢你的想法，要么愿意资助你，而不会另外去建立一个团队。</p><p>其次，大多数人会认为你的想法很愚蠢。（即使事实未必是这样。）</p><p>即使你的想法落入坏人之手，他们可能只会得到高层次的“电梯推销”，无论如何都没有多大价值。到那时，你已经通过与尽可能多的人交谈，进一步、更详细地发展了这个想法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天读到Chris Dixon的一篇文章&lt;a href=&quot;https://cdixon.org/2009/08/22/why-you-shouldnt-keep-your-startup-idea-secret&quot;&gt;你为什么不应该对你的创业想法保密&lt;/a&gt;。Chris Dix</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>好的研究离不开详尽的调查</title>
    <link href="https://caoyihan.com/2024/06/08/Good-research-And-thorough-investigation/"/>
    <id>https://caoyihan.com/2024/06/08/Good-research-And-thorough-investigation/</id>
    <published>2024-06-08T03:37:30.000Z</published>
    <updated>2024-06-11T12:13:16.286Z</updated>
    
    <content type="html"><![CDATA[<p>最近阅读了浑水做空瑞幸的<a href="https://cdn.gmtresearch.com/public-ckfinder/Short-sellers/Unknown%20author/Luckin%20Coffee_Anonymous.pdf">《Luckin Coffee: Fraud + Fundamentally Broken Business》</a>，这篇的目的是揭露瑞幸的数据造假，风险警报，以及商业模式的缺陷。</p><p>好的研究离不开详尽的调查。为了支撑文中提出的16个非共识的观点，浑水动员了一千多人，采集了620个门店长达11260小时的门店流量视频，2.5万+份客户收据，让这些论点变得确凿无比。</p><p><img src="/../images/%E7%91%9E%E5%B9%B8%E9%97%A8%E5%BA%97.jpg" alt="瑞幸门店"></p><p>浑水提出的确切观点有：</p><blockquote><h4 id="确凿证据-1"><a href="#确凿证据-1" class="headerlink" title="确凿证据 #1"></a>确凿证据 #1</h4><p>2019年第三季度每店每日的销售数量至少被夸大了69%，2019年第四季度被夸大了88%，这由11,260小时的门店视频监控数据支持。我们动员了92名全职和1,418名兼职员工，在981个店日内监控和记录了100%营业时间内的门店客流。门店选取基于城市和位置类型，与瑞幸所有直营门店的分布相同。</p><h4 id="确凿证据-2"><a href="#确凿证据-2" class="headerlink" title="确凿证据 #2"></a>确凿证据 #2</h4><p>瑞幸咖啡“每单商品数量”从2019年第二季度的1.38下降到2019年第四季度的1.14。</p><h4 id="确凿证据-3"><a href="#确凿证据-3" class="headerlink" title="确凿证据 #3"></a>确凿证据 #3</h4><p>我们收集了25,843张顾客收据，发现瑞幸咖啡至少夸大了每件商品的净售价1.23元人民币或12.3%以人为维持其商业模式。实际店面级别的亏损率高达24.7%-28%。扣除免费商品，实际售价为标价的46%，而非管理层声称的55%。</p><h4 id="确凿证据-4"><a href="#确凿证据-4" class="headerlink" title="确凿证据 #4"></a>确凿证据 #4</h4><p>第三方媒体跟踪显示，瑞幸咖啡在2019年第三季度夸大了其广告费用超过150%，尤其是对分众传媒的支出。瑞幸咖啡可能通过回收夸大的广告费用回收，进而配平夸大的收入和店面利润。</p><h4 id="确凿证据-5"><a href="#确凿证据-5" class="headerlink" title="确凿证据 #5"></a>确凿证据 #5</h4><p>瑞幸咖啡2019年第三季度“其他产品”的收入贡献仅为约6%，几乎夸大了400%，这由25,843张顾客收据和其申报的增值税数据显示。</p><h4 id="商业模式缺陷-1"><a href="#商业模式缺陷-1" class="headerlink" title="商业模式缺陷 #1"></a>商业模式缺陷 #1</h4><p>瑞幸咖啡瞄准核心功能性咖啡需求的提议是错误的：中国人均咖啡因摄入量为86毫克&#x2F;天，与其他亚洲国家相当，其中95%的摄入量来自茶。中国的核心功能性咖啡产品市场规模较小且增长适中。</p><h4 id="商业模式缺陷-2"><a href="#商业模式缺陷-2" class="headerlink" title="商业模式缺陷 #2"></a>商业模式缺陷 #2</h4><p>瑞幸的客户是高度价格敏感的，客户保留主要依赖于大幅折扣促销。瑞幸试图减少折扣（即提高实际价格）并同时增加同店销售的做法是不可能实现的。</p><h4 id="商业模式缺陷-3"><a href="#商业模式缺陷-3" class="headerlink" title="商业模式缺陷 #3"></a>商业模式缺陷 #3</h4><p>瑞幸的单店经济效益有缺陷，无法实现盈利，其破碎的商业模式注定会崩溃。</p><h4 id="商业模式缺陷-4"><a href="#商业模式缺陷-4" class="headerlink" title="商业模式缺陷 #4"></a>商业模式缺陷 #4</h4><p>瑞幸“成为每个人日常生活的一部分，从咖啡开始”的梦想不太可能实现，因为它在非咖啡产品方面也缺乏核心竞争力。其“平台”充斥着没有品牌忠诚度的机会主义客户。其轻量化劳动力模式只适合生产已经存在市场十多年的“1.0”代茶饮，而领先的新鲜茶饮玩家五年前已经推出了“3.0”代产品。</p><h4 id="商业模式缺陷-5"><a href="#商业模式缺陷-5" class="headerlink" title="商业模式缺陷 #5"></a>商业模式缺陷 #5</h4><p>瑞幸茶的特许经营业务面临高合规风险，因为它没有按照法律要求在相关部门注册。瑞幸茶于2019年9月启动其特许经营业务，而当时它没有至少两家直营店运营满一年。</p></blockquote><p>全文报告中列出的证据非常详细，包括大量的视频截图和收据截图，论证的估计也都是有依据的。自然，浑水的这份报告是非常成功的。</p><p><img src="/../images/%E6%B5%91%E6%B0%B4%E7%91%9E%E5%B9%B8%E8%AE%A2%E5%8D%95%E6%88%AA%E5%9B%BE.png" alt="手机上的订单图片"></p><p>类似的优秀研究报告还有毛主席的《湖南农民运动考察报告》和《寻乌调查》。这些报告同样基于大量调查，用详实的证据、数据和信息做支撑，得出了非共识且正确的结论。</p><p>（附注：有趣的是，浑水公司虽然提出了很多瑞幸的商业模式缺陷，但现在四年半之后回首再看，应该会有不一样的结论。例如，瑞幸的价格战越打越猛烈，推出了9.9元一杯的活动，但是经营并没有崩溃，而且在 2023 年营收就超过了星巴克中国。并且中国整体的咖啡市场也在快速增长，2022 年同比增长 <a href="https://news.winshang.com/html/071/6541.html">28.67%</a>。而且中国人均咖啡因摄入量超过 100mg&#x2F;d。从现在来看，当初浑水公司提出的不少预测也是错误的。）</p><p><img src="/../images/%E4%B8%AD%E5%9B%BD%E5%92%96%E5%95%A1%E8%A1%8C%E4%B8%9A%E5%B8%82%E5%9C%BA%E8%A7%84%E6%A8%A1.png" alt="2013-2023中国咖啡行业市场规模"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近阅读了浑水做空瑞幸的&lt;a href=&quot;https://cdn.gmtresearch.com/public-ckfinder/Short-sellers/Unknown%20author/Luckin%20Coffee_Anonymous.pdf&quot;&gt;《Luckin Co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Climbing the wrong hill</title>
    <link href="https://caoyihan.com/2024/06/07/Climbing-the-wrong-hill/"/>
    <id>https://caoyihan.com/2024/06/07/Climbing-the-wrong-hill/</id>
    <published>2024-06-07T09:39:53.000Z</published>
    <updated>2024-06-11T12:16:58.693Z</updated>
    
    <content type="html"><![CDATA[<p>我经常提醒自己，不要 <a href="https://cdixon.org/2009/09/19/climbing-the-wrong-hill">climbing the wrong hill</a>。</p><p>计算机科学中的一个经典问题是爬山（hill climbing）。想象一下，自己像一个小蚂蚁一样被扔在丘陵地带的一个随机地点，你只看得到周围一个小局部。目标是到达最高的山峰。</p><p>一个最简单的算法是，在任何时刻，都朝着更高的方向迈出一小步。这种方法的风险是，很可能到达某个小山丘的顶部，而非最高的山峰顶部。</p><p>另一个通常更好的算法是，先让自己反复地把自己随机地放在地形的不同部分，做简单的爬山，然后在多次这样的尝试之后，决定哪个山丘最高。</p><p>作为一个普通人，我们可能知道我们想要登上的山峰并不是我们正在攀登的山丘。但当前的山丘诱惑力很强。最终陷入了行为经济学家强调的一个常见陷阱「当下享乐偏误」：人们倾向于系统性地高估短期回报，而非长期回报。这种影响在更有野心的人身上似乎更强烈。他们的雄心壮志似乎使他们很难放弃短期的上升台阶。</p><p>那我们应该怎么做呢？应该随机地进入地形的不同部分，寻找最高的山峰，当寻找到最高的山峰时，不要再在当前的山丘上浪费时间了，无论下一步看起来多么好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我经常提醒自己，不要 &lt;a href=&quot;https://cdixon.org/2009/09/19/climbing-the-wrong-hill&quot;&gt;climbing the wrong hill&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;计算机科学中的一个经典问题是爬山（hill clim</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>为什么应该用 Hugging Face Inference Endpoints 构建AI应用</title>
    <link href="https://caoyihan.com/2024/06/04/WhyHuggingFaceInferenceEndpoints/"/>
    <id>https://caoyihan.com/2024/06/04/WhyHuggingFaceInferenceEndpoints/</id>
    <published>2024-06-04T08:25:08.000Z</published>
    <updated>2024-06-11T10:19:53.253Z</updated>
    
    <content type="html"><![CDATA[<p>最近在构建产品的过程当中，偶然使用了 Hugging face 的 Inference API 和 Inference Endpoints，感觉非常方便好用，想推荐给大家。(不是软文)</p><p>我采取的整体技术方案是，Next.js + Vercel + Hugging Face Inference Endpoint 的 API，前后端采用统一的框架，没有使用云服务器。</p><p>因为做独立开发，最重要的，就是快速推出产品，而且为了快速迭代，应该使用简单的部署方案。而为了尽可能地使用简单的技术方案，用 API 构建产品，比自己部署大模型，要更方便快速，尤其是在构造 MVP（最小可行性产品）的时候。</p><p>但问题是，有很多模型并没有提供 API，或者提供的 API 并不完全，比如说 OpenAI 的 Whisper，现在官方还只提供 Whisper-large-V2 的 API，但 Whisper-large-V3 已经推出很长时间了，但 OpenAI 并没有提供 API。而且还有很多基于某些特定任务做了微调的大模型，也没有提供 API。也有些模型，只有 Python 的 API，没有提供JavaScript 的API，使用起来也会麻烦一点。</p><p>并且，不同的模型，提供的 API 格式可能也不一样，如果产品需要用到多个不同的模型，切换起来会麻烦一点。</p><p>而 Hugging Face 就为很多模型提供了 API，只需要在 Hugging Face 找到需要的模型，点击 Deploy—Inference API，即可使用，并且有 Python, JavaScript, cURL 三个版本。而且，要切换不同的模型，只需要更改API链接，比如将<code>meta-llama/Meta-Llama-3-8B-Instruct</code>修改成<code>https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.3</code>即可。</p><p><img src="/../images/InferenceAPI2.png" alt="image-20240604160351720"></p><p><img src="/../images/InferenceAPI1.png" alt="image-20240604160054753"></p><p>注意，Inference API 只适合开发环境或者测试，因为比较拥挤，在生产环境是不够用的。在生产环境需要使用 Inference Endpoints。Inference API 是免费的，Inference Endpoints 按小时付费。如果说使用量较大的话，也需要注意成本。</p><p><img src="/../images/EndPoints.png" alt="image-20240604161107855"></p><p>Inference Endpoints 的主要作用，正如它<a href="https://huggingface.co/inference-endpoints/dedicated">官网</a>所说，是让生产部署更加简单。可以部署任何模型到任何云。</p><p>而且如果需要自己训练模型，也可以把模型上传到 Hugging Face Hub ，然后使用 Inference Endpoints 进行部署。</p><p>总的来说，Hugging Face 的 Inference API 和 Inference Endpoints 为独立开发者和小型团队提供了一个轻量化的解决方案，帮助他们快速推出和迭代产品。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在构建产品的过程当中，偶然使用了 Hugging face 的 Inference API 和 Inference Endpoints，感觉非常方便好用，想推荐给大家。(不是软文)&lt;/p&gt;
&lt;p&gt;我采取的整体技术方案是，Next.js + Vercel + Huggin</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于APIConnectionError： Connection error在JavaScript的最新解决方案</title>
    <link href="https://caoyihan.com/2024/06/04/APIConnectionError/"/>
    <id>https://caoyihan.com/2024/06/04/APIConnectionError/</id>
    <published>2024-06-04T06:30:30.000Z</published>
    <updated>2024-06-04T06:30:30.724Z</updated>
    
    <content type="html"><![CDATA[<p><strong>TL;DR:</strong> 使用 axios 和 dotenv 解决 APIConnectionError 问题。</p><h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>在本地服务器运行 Next.js 项目时，调用 OpenAI API 或 Hugging face API 会报错 <code>APIConnectionError: Connection error</code>。调用 Hugging Face 的其他模型 API 时，同样报错。然而，部署在 Vercel 上可以正常运行。</p><p>项目环境：</p><ul><li>编程语言：JavaScript 和 TypeScript</li><li>框架：Next.js 和 React</li><li>地理位置：中国大陆</li></ul><p><strong>错误原因分析</strong></p><h3 id="错误原因分析："><a href="#错误原因分析：" class="headerlink" title="错误原因分析："></a>错误原因分析：</h3><p>通过谷歌查询，初步判断是 Node.js 的代理问题。附 OpenAI 官方文档：<a href="https://help.openai.com/en/articles/6897191-apiconnectionerror"><strong>APIConnectionError</strong></a></p><h3 id="尝试过的解决方案（无效）："><a href="#尝试过的解决方案（无效）：" class="headerlink" title="尝试过的解决方案（无效）："></a>尝试过的解决方案（无效）：</h3><ol><li><p>在 powershell 上配置代理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$env:HTTP_PROXY=&quot;http://127.0.0.1:33210&quot;</span><br><span class="line">$env:HTTPS_PROXY=&quot;http://127.0.0.1:33210&quot;</span><br><span class="line">$env:ALL_PROXY=&quot;socks5://127.0.0.1:33211&quot;</span><br></pre></td></tr></table></figure><p>但发现这样配置了之后，仍然出现APIConnectionError: Connection error报错。</p></li><li><p>很多解决方案通过修改 openai 的 Python 库来解决，但是无法用在JavaScript 和 Next.js上。</p></li></ol><h3 id="解决方案概述："><a href="#解决方案概述：" class="headerlink" title="解决方案概述："></a>解决方案概述：</h3><p>使用axios 和dotenv即可解决问题，以下是具体步骤：</p><p>1.在 Next.js 项目中安装 axios 和 dotenv：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios dotenv</span><br></pre></td></tr></table></figure><p>2.在需要调用API的场景，使用axios进行API请求，并同时配置代理。</p><p>代码示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import * as fs from &#x27;fs&#x27;;</span><br><span class="line">import * as path from &#x27;path&#x27;;</span><br><span class="line">import axios from &#x27;axios&#x27;;</span><br><span class="line">import * as dotenv from &#x27;dotenv&#x27;;</span><br><span class="line"></span><br><span class="line">dotenv.config();</span><br><span class="line"></span><br><span class="line">async function query(filePath: string) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    const data = fs.readFileSync(filePath); // 读取文件内容</span><br><span class="line">    const response = await axios.post(</span><br><span class="line">      &#x27;https://api-inference.huggingface.co/models/openai/whisper-tiny&#x27;,</span><br><span class="line">      data, // 文件内容作为请求体</span><br><span class="line">      &#123;</span><br><span class="line">        headers: &#123;</span><br><span class="line">          &quot;Accept&quot;:&quot;application/json&quot;,</span><br><span class="line">          Authorization: `Bearer hf_xxxxxxxxxxxxxxxxxxxxxxxxxx`,</span><br><span class="line">          &#x27;Content-Type&#x27;: &#x27;audio/wav&#x27;, // 确保内容类型是音频文件</span><br><span class="line">        &#125;,</span><br><span class="line">        proxy: &#123;</span><br><span class="line">          protocol: &#x27;http&#x27;,</span><br><span class="line">          host: &#x27;127.0.0.1&#x27;,</span><br><span class="line">          port: 33210,// 这里应该根据使用的代理，修改成相应的port</span><br><span class="line">        &#125;,</span><br><span class="line">        timeout: 10000, // 设置超时时间为10秒</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">    return response.data;</span><br><span class="line">  &#125; catch (error) &#123;</span><br><span class="line">    if (axios.isAxiosError(error)) &#123;</span><br><span class="line">      console.error(&#x27;Axios error:&#x27;, error.response?.data);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      console.error(&#x27;Unexpected error:&#x27;, error);</span><br><span class="line">    &#125;</span><br><span class="line">    throw error;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 调用函数并传入文件路径</span><br><span class="line">query(path.resolve(__dirname, &quot;C:\\Users\\caoca\\Music\\sample1.wav&quot;))</span><br><span class="line">  .then((response) =&gt; &#123;</span><br><span class="line">    console.log(JSON.stringify(response));</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch((error) =&gt; &#123;</span><br><span class="line">    console.error(error);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h3><p>通过使用 axios 和 dotenv，可以有效解决 Next.js 项目中调用 OpenAI API 或 Hugging face API 报错的问题，提升开发体验和项目的稳定性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; 使用 axios 和 dotenv 解决 APIConnectionError 问题。&lt;/p&gt;
&lt;h3 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>语C黑话手册</title>
    <link href="https://caoyihan.com/2024/06/03/Text-Role-Play/"/>
    <id>https://caoyihan.com/2024/06/03/Text-Role-Play/</id>
    <published>2024-06-03T06:25:07.000Z</published>
    <updated>2024-06-11T11:51:40.512Z</updated>
    
    <content type="html"><![CDATA[<p>最近偶然接触到一个亚文化圈子「语C」，突然发现，这不就和各种流行的AI聊天机器人很像吗？</p><p>语C，又称语言cosplay，是一种用纯文字进行的角色扮演活动。通过文字描写叙述特定的背景故事，描述人物动作和心理活动，并与其他玩家互动。语C是由二次元文化衍生出的亚文化。</p><p>由于这个圈子黑话很多，所以我整理了一些常用的词义，方便对语C感兴趣的朋友们收藏，碰到时可以对照理解。Enjoy。</p><h4 id="语C黑话手册"><a href="#语C黑话手册" class="headerlink" title="语C黑话手册"></a>语C黑话手册</h4><ol><li><p><strong>语C，语擦，语cos</strong>：语言cosplay，一种用纯文字进行的角色扮演活动。</p></li><li><p><strong>皮</strong>：饰演的角色。</p></li><li><p><strong>披皮、上皮、改备注</strong>：将备注修改成自己所扮演的角色。</p></li><li><p><strong>带套</strong>：例如]、】、}、)等符号，用于说明三次元现实情况的句子。一些群也有单独的规定。</p></li><li><p><strong>开戏，KJ</strong>：将自己的角色带入特定场景或剧情，与其他角色互动或对话。</p><span id="more"></span></li><li><p><strong>前台、主、戏</strong>：用于开戏的地方。</p></li><li><p><strong>后台</strong>：在前台开戏或游戏等不能说话的情况下，可以围观、讨论或崩坏的地方。</p></li><li><p><strong>游戏</strong>：无聊时的活动，如KG、猜数字、谁是卧底、真心话大冒险等。</p></li><li><p><strong>插戏</strong>：在开戏过程中突然出现无关角色或突然说话的情况。</p></li><li><p><strong>入戏</strong>：完全代入角色，不做与角色不符的行为或语气。</p></li><li><p><strong>KG</strong>：KingGame（国王游戏），由一人主持，私Q发给参加者一个编号，让主持人决定几号做什么活动。</p></li><li><p><strong>崩皮</strong>：做出与角色不符的行为或语气。</p></li><li><p><strong>围观</strong>：不参与聊天或开戏，只是观看的人。</p></li><li><p><strong>SQ</strong>：私Q，私聊的意思。</p></li><li><p><strong>玛丽苏</strong>：原创角色，通常指完美无缺的女性角色。</p></li><li><p><strong>小白</strong>：不了解语C或戏剧氛围不好的人，指语C的初学者。</p></li><li><p><strong>审核</strong>：考核角色扮演水平，通过审核才能进主场，也有其他用途。</p></li><li><p><strong>剧本</strong>：游戏时设定好的剧情，多用于KG或开戏时。</p></li><li><p><strong>拉线</strong>：在聊天框上用符号或下划线作为分界线，分割开戏或游戏的区域，线下不能插戏。</p></li><li><p><strong>线下</strong>：指拉线后的所有聊天记录。</p></li><li><p><strong>刷屏</strong>：重复发送同样的表情、符号、语句等；开戏时文字超过一屏也算刷屏。</p></li><li><p><strong>认亲</strong>：在语C中相认并称呼昵称等的行为。</p></li><li><p><strong>圈</strong>：一个动漫题材或按种类分布的语C范围。</p></li><li><p><strong>混圈</strong>：在多个语C圈子中都有加入。</p></li><li><p><strong>混圈名</strong>：在语C中为自己起的名字。</p></li><li><p><strong>CP，西皮</strong>：在语C中为自己找到的唯一爱人。</p></li><li><p><strong>情人</strong>：开戏时调情对象，没有唯一性。</p></li><li><p><strong>419</strong>：指一夜情，音译自“For One Night”。</p></li><li><p><strong>气场帝</strong>：指在角色扮演中气场很好的人。</p></li><li><p><strong>煤气厂</strong>：音译“没气场”，指没有气场。</p></li><li><p><strong>油漆厂</strong>：音译“有气场”，指有气场。</p></li><li><p><strong>爬墙</strong>：有CP的情况下与其他角色发生情感互动。</p></li><li><p><strong>PC</strong>：指替人代演，剧情需要的角色。</p></li><li><p><strong>弧</strong>：因为忙别的事情而离开一段时间没有及时回应。</p></li><li><p><strong>AW</strong>：Anewworld的缩写，意为“一弧一世界”。</p></li><li><p><strong>圈名</strong>：在语C圈内为自己起的名字。</p></li><li><p><strong>梗</strong>：在语C中指开戏的背景、设定，由出梗人或首先开戏的人给出。</p></li><li><p><strong>梗废</strong>：不会出梗的人的自称。</p></li><li><p><strong>镜面</strong>：两人用同样的角色身份进行对戏，多用于两人抢角色时。</p></li><li><p><strong>同梗</strong>：两人或以上用相同的梗单独进行对戏或自述，多用于两人抢角色时。</p></li><li><p><strong>皮设</strong>：角色设定。</p></li><li><p><strong>BG</strong>：指“Boy and Girl”的缩写，即异性恋情节，通常指男女性别的恋爱关系。</p></li><li><p><strong>BGB</strong>：指“Boy-Girl-Boy”的缩写，表示双性恋或双向恋情节，即角色可能与男生或女生都可以形成恋爱关系。</p></li><li><p><strong>GL</strong>：指“Girls’ Love”，即百合情节，女生之间的恋爱关系。</p></li><li><p><strong>BL</strong>：指“Boys’ Love”，即耽美情节，男生之间的恋爱关系。</p></li></ol><h3 id="语C的核心"><a href="#语C的核心" class="headerlink" title="语C的核心"></a>语C的核心</h3><p>语C的核心在于通过文字扮演角色，创造出能打动人心的剧情和角色互动。戏的好坏不在于其他，而在于这场戏是否能将大家感动。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近偶然接触到一个亚文化圈子「语C」，突然发现，这不就和各种流行的AI聊天机器人很像吗？&lt;/p&gt;
&lt;p&gt;语C，又称语言cosplay，是一种用纯文字进行的角色扮演活动。通过文字描写叙述特定的背景故事，描述人物动作和心理活动，并与其他玩家互动。语C是由二次元文化衍生出的亚文化。&lt;/p&gt;
&lt;p&gt;由于这个圈子黑话很多，所以我整理了一些常用的词义，方便对语C感兴趣的朋友们收藏，碰到时可以对照理解。Enjoy。&lt;/p&gt;
&lt;h4 id=&quot;语C黑话手册&quot;&gt;&lt;a href=&quot;#语C黑话手册&quot; class=&quot;headerlink&quot; title=&quot;语C黑话手册&quot;&gt;&lt;/a&gt;语C黑话手册&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;语C，语擦，语cos&lt;/strong&gt;：语言cosplay，一种用纯文字进行的角色扮演活动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;皮&lt;/strong&gt;：饰演的角色。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;披皮、上皮、改备注&lt;/strong&gt;：将备注修改成自己所扮演的角色。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;带套&lt;/strong&gt;：例如]、】、}、)等符号，用于说明三次元现实情况的句子。一些群也有单独的规定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;开戏，KJ&lt;/strong&gt;：将自己的角色带入特定场景或剧情，与其他角色互动或对话。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>聚光灯效应：如何在创业中减轻焦虑</title>
    <link href="https://caoyihan.com/2024/06/02/Spotlight-Effect/"/>
    <id>https://caoyihan.com/2024/06/02/Spotlight-Effect/</id>
    <published>2024-06-02T13:34:53.000Z</published>
    <updated>2024-06-02T13:34:53.428Z</updated>
    
    <content type="html"><![CDATA[<p>创业途中，许多人总会有各种各样的担忧，比如担心迟迟没有收入，或者担心产品没做出来而被别人笑话。我想分享一个自己的心理妙方「聚光灯效应」，它或许能帮你缓解这些担忧。</p><h4 id="聚光灯效应"><a href="#聚光灯效应" class="headerlink" title="聚光灯效应"></a>聚光灯效应</h4><p>聚光灯效应指的是，人们常常把自己看做一切的中心，并且高估别人对自己的关注程度。然而，事实上，其他人并没有那么在意我们的一举一动。在创业方面，像各种商业媒体，往往也只对大公司们感兴趣，很少报道小微公司。</p><h4 id="为什么会产生聚光灯效应？"><a href="#为什么会产生聚光灯效应？" class="headerlink" title="为什么会产生聚光灯效应？"></a>为什么会产生聚光灯效应？</h4><p>聚光灯效应的产生与我们的大脑运作方式密切相关。我们每个人都是自己生活的主角，因此对自己的行为和外貌会格外敏感和关注。这种自我关注让我们不自觉地认为他人也在同样地关注着我们。</p><p>心理学研究表明，聚光灯效应的出现主要是因为我们无法完全摆脱自我视角。在社交互动中，我们常常忘记他人也有自己的关注点和优先事项，因此会高估自己在他人眼中的显著性。</p><p>例如，你可能在会议上发表了一个观点，随后一直担心大家对你观点的评价。然而，实际上，其他人可能只会短暂注意到你的发言，然后继续关注他们自己的事情。</p><h4 id="如何应对聚光灯效应？"><a href="#如何应对聚光灯效应？" class="headerlink" title="如何应对聚光灯效应？"></a>如何应对聚光灯效应？</h4><p>认识到聚光灯效应的存在，可以帮助你在创业过程中减少不必要的紧张和焦虑。以下是几种应对的方法：</p><ol><li>勇于尝试：不要因为害怕被失败而退缩。创业本身就是一个不断试错和学习的过程，失败是其中的一部分。至少在当今时代，保守往往容易拖累发展，冒险更可能获得机会。</li><li>调整心态：记住，别人并没有那么在意你。他们同样忙于自己的生活和工作。即使你在某些方面表现不佳，大多数人也不会过多关注。</li><li>专注于目标：把注意力从他人的评价转移到自己的目标和任务上。专注于自己要完成的工作，而不是担心别人怎么想。</li></ol><p>认识到聚光灯效应，就不那么容易紧张而焦虑了。别人不会那么在意你，而且即使失败了，也没有你想象中的那么严重。勇敢地迈出每一步，你会发现自己的潜力远超预期。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;创业途中，许多人总会有各种各样的担忧，比如担心迟迟没有收入，或者担心产品没做出来而被别人笑话。我想分享一个自己的心理妙方「聚光灯效应」，它或许能帮你缓解这些担忧。&lt;/p&gt;
&lt;h4 id=&quot;聚光灯效应&quot;&gt;&lt;a href=&quot;#聚光灯效应&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>乔布斯往事两则</title>
    <link href="https://caoyihan.com/2024/05/26/something-about-Jobs/"/>
    <id>https://caoyihan.com/2024/05/26/something-about-Jobs/</id>
    <published>2024-05-26T13:07:48.000Z</published>
    <updated>2024-05-29T11:33:58.435Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/revolutioninthevalley.jpg"></p><p>最近几年，马斯克似乎已经取代了乔布斯，成为了很多人的创业偶像。也很少再有人提乔布斯的现实扭曲力场了。但是读了《硅谷革命——成就苹果公司的疯狂往事》，发现了乔布斯蛮多有趣的细节。</p><p>作者 Andy Hertzfeld 最早是在 Apple II 项目组，却想加入麦金塔项目组。当 Andy 走进乔布斯的办公室时，乔布斯劈头就问：「你行吗？我们麦金塔团队只要真正的能人，我不确定你行不行。」Andy 说能行。几个小时后，乔布斯告诉 Andy：「跟我来，让我带你到你的新工位。」</p><p>Andy 说，他需要一两天时间来完成手头上的工作，下个星期一就可以加入麦金塔团队。</p><p>乔布斯发问：「你现在在做什么？有什么事情比麦金塔更重要？你做这个只是在浪费时间而已！谁会关心 Apple II？再过几年 Apple II 就玩完了，你的操作系统还没写完就已经过时了。麦金塔才是苹果公司的未来，你现在就过来吧！」</p><p>乔布斯说着，走到 Andy 桌旁，找到 Apple II 的电源线，用力一拉拔掉插头，电脑被关掉了。Andy 刚刚写的代码也跟着消失了。乔布斯拔掉显示器的插头，把它放在主机上，然后搬起它们放到车的后备箱里。</p><p>乔布斯似乎很多时候都急不可耐，而且不是很有礼貌。有次，乔布斯面试一个软件经理时，候选人回答支支吾吾的，十分拘谨，乔布斯很快就不耐烦了，开始问一些出格的问题：</p><p>「你是几岁失去童贞的？」</p><p>候选人以为自己听错了。</p><p>乔布斯又问：「你磕过几次迷幻药？」</p><p>候选人就在回答问题时，乔布斯开始“呱、呱、呱”模仿火鸡的叫声，直接结束了面试。</p><p>尽管《硅谷革命》揭示了许多关于乔布斯的有趣细节，但这本书整体上内容冗长、写作平淡，难以引人入胜。</p><p>更糟糕的是，书中大量的细节描写显得琐碎且无关紧要，很多故事虎头蛇尾，无法为读者提供实质性的启示或价值。许多奇闻轶事虽然有趣，但未能深入挖掘事件背后的原因和影响，让人读后感觉不过是一些片段拼凑而成的文字。</p><p>如果你对乔布斯的传奇生涯和苹果公司的发展历程感兴趣，或许有更好的选择可以深入了解这些内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/../images/revolutioninthevalley.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近几年，马斯克似乎已经取代了乔布斯，成为了很多人的创业偶像。也很少再有人提乔布斯的现实扭曲力场了。但是读了《硅谷革命——成就苹果公司的疯狂往事》，发现了乔布斯蛮</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>简单比正确更重要</title>
    <link href="https://caoyihan.com/2024/05/24/simplicity-is-more-important-than-correctness/"/>
    <id>https://caoyihan.com/2024/05/24/simplicity-is-more-important-than-correctness/</id>
    <published>2024-05-24T06:38:02.000Z</published>
    <updated>2024-05-24T06:38:02.824Z</updated>
    
    <content type="html"><![CDATA[<p>Luyao写了一个帖子<a href="https://zhangluyao.com/blog/worse_is_better/">《简单比正确更重要》</a></p><blockquote><p>为什么一些看起来“很垃圾”的软件会占领市场?</p><p>我从中学到的东西就是，<strong>简单比正确更重要</strong>。不必追求“正确”，你需要 50% 正确，当它像病毒一样传播以后，人们会花时间将它改进到 90% 正确。但它首先要是一个病毒，而不是一个“正确”的东西。而复杂的东西显然不会成为病毒。（作者把 C 语言和 Unix 称做最大的计算机病毒。）</p></blockquote><p>参考链接：<a href="https://www.jwz.org/doc/worse-is-better.html">https://www.jwz.org/doc/worse-is-better.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Luyao写了一个帖子&lt;a href=&quot;https://zhangluyao.com/blog/worse_is_better/&quot;&gt;《简单比正确更重要》&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么一些看起来“很垃圾”的软件会占领市场?&lt;/p&gt;
&lt;p&gt;我从中学到的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>中外程序员差异和文字表达</title>
    <link href="https://caoyihan.com/2024/05/23/expressions/"/>
    <id>https://caoyihan.com/2024/05/23/expressions/</id>
    <published>2024-05-23T15:49:15.000Z</published>
    <updated>2024-05-23T15:49:15.802Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://catcoding.me/p/diff/">《中外程序员差异》</a></p><blockquote><p>文字表达</p><p>文字表达能力是开源社区里一个非常重要的，因为但凡一个大的改动都需要和其他人广泛讨论和协作。</p><p>不少国外的程序员有文字表达的习惯，就是即使看很小的一点问题也会通过文字表达出来。这是很多国内程序员所没有的习惯，因为我们大多比较含蓄，认为多做比说强，说多容易错，说多容易暴露自己。</p><p>可能和教育和网络环境也有一定关系，如果不是刻意维持文字表达的习惯，很多人高中毕业后就没有写过几篇长文，对很多事情也没有自己的看法。</p><p>另外他们习惯使用 Email 来沟通，但中国开发人员大多习惯使用 IM 沟通。这两者还是有区别的，IM 沟通会让人不自觉地回复得更快，有的模糊想法随口就就表达了。而 Email 沟通更容易让人把事情写清楚，也更容易写得更长和有条理。</p><p>这种细微的差异长久了之后就可看出中英文技术社区的巨大差别。另外，中文网络的环境中戾气更重一些，人们对自我推销很反感，容易揣测你的意图。</p></blockquote><p>看到这一点，深有感触。说多确实容易说错，但即使这样，也应该多说。</p><p>而且，我自己短的帖子写多了，也会觉得长文很难写，写一篇2000字的文章，可能要花一整个下午。把事情写清楚，也是一种需要锻炼的能力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://catcoding.me/p/diff/&quot;&gt;《中外程序员差异》&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文字表达&lt;/p&gt;
&lt;p&gt;文字表达能力是开源社区里一个非常重要的，因为但凡一个大的改动都需要和其他人广泛讨论和协作。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://caoyihan.com/2024/05/20/boyfriend-for-a-day/"/>
    <id>https://caoyihan.com/2024/05/20/boyfriend-for-a-day/</id>
    <published>2024-05-20T06:10:59.000Z</published>
    <updated>2024-05-23T15:24:05.823Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/sIx6fpOVYe1n-ywDwSMi8Q">《一日男友》</a>：</p><blockquote><p>被夸奖、被鼓励、被倾听、被看见，我们把对这些事物的渴望投射到“爱”上。“爱”不会天然眷顾每一个人。为了得到它，一些女性四处求索，从手机里到现实中，从二次元到三次元。她们痴迷、成瘾，最终相信自己得到了爱，哪怕是短暂的，明码标价的爱。</p></blockquote><blockquote><p>我在游戏中体验到一种超越现实的理想亲密关系。我们的恋爱从暧昧开始，他会假装不经意地关心我，暗中吃我和别人的醋，我们给彼此起专属的外号。随着了解增加，我发现他其实在很早之前就爱上了我。当然了，他还拥有几乎完美的外貌和身材。</p></blockquote><span id="more"></span><blockquote><p>我给他发消息，哪怕只是一个表情包，他也会耐心回复三四句话。我们一起抓娃娃，我一个也没抓到，他会摸我的头，说，“至少现在我们知道怎么做会抓不到，下次避开就好了。” 他从不吝啬对我的夸奖，我向他倾诉工作成果，他会说“毕竟是你，完全在意料之中。”</p></blockquote><blockquote><p>更重要的是，他们能够理解我的情感，也能表达自己的情感。不高兴吃醋了他会直接告诉我：“刚才你对他们说的是真的吗？真的有很多别的搭档吗？”产生误会了他会第一时间说清：“我不了解酒的价格，刚才不是故意点这么贵的，以后不会了。”我告诉他他每次短信都只用句号，显得没有情绪。他立刻在回复里加上了感叹号。“如果不习惯，可以先对我练习。”我说。“本来也是只打算对你说的！”他回答我。</p><p>在《恋与深空》的设定里，角色们都有一种叫做“evol”的超能力。这个单词倒过来写是“love”。在我对现实世界男性的观察里，理解爱、能够爱的确像一种超能力。</p></blockquote><blockquote><p>游戏里，萧逸会主动送她钻戒。场景也符合她对浪漫的想象——他请她参加一场婚礼主题的赛车嘉年华，穿着白西服的萧逸给穿着婚纱的她戴上一枚蓝色钻戒。</p></blockquote><blockquote><p>四月底，甜甜去外地旅游，约了一个当地的委托老师作为萧逸陪她三天，每天八小时，一天400元。提前三天，委托老师就把自己的qq头像换成了萧逸的照片，每天用萧逸的语气和她聊几句天。见面那天，萧逸直接抱住她：“好久不见，萧小五。” 萧小五是游戏里萧逸对女主角的昵称。</p></blockquote><blockquote><p>有次约会，甜甜拿出手机刷短视频，看到另一个游戏里的男主角，脱口而出“我老公真帅”。坐她对面的萧逸看起来吃醋了，说，萧小五你要不要听听你在说什么？甜甜赶紧卖乖解释，但心里暗爽。</p></blockquote><p>读着真的很感动，原来吃醋也是一种表达「爱」的方式</p><blockquote><p>每场委托开始前，委托老师都会给单主发送一张了解她们喜好的问卷，我收到的问卷是这样的：</p><p>可以接受怎样的肢体接触？</p><p>是否有过敏&#x2F;忌口？</p><p>喜欢的食物&#x2F;口味？</p><p>喜欢的颜色？</p><p>你对什么话题感兴趣？</p><p>有什么话题要避雷？</p><p>希望我主动开启话题还是安静倾听？</p><p>有什么希望我为你做的事？</p><p>……</p><p>不到二十个问题，我花了整整一个星期也没有填完。我发现从未有人问过、在意过我的这些问题，以至于连我自己都不知道答案。我到底喜欢什么口味？通常都是大家选完剩下的饮料我随手打开。我对什么话题感兴趣？我已经习惯了在对话里去找别人的话口，在冷场时接茬。填问卷时我第一次听见自己的想法：不要让我找话题，我希望你来对所有的沉默负责。有什么能为我做的事？有一句话出现在我的脑海里，我打下一个开头又删掉，花了十分钟才写完这八个字。</p><p>“希望你能多夸夸我。”这句话被打在屏幕上时，我的鼻子酸了一下。</p><p>填这张问卷时的感觉是我过去二十年来从未有过的生命体验。照顾他人、讨好他人的本能被完全剔除，面对这些问题时我第一次成为一个100%只用考虑自己的人。这种感觉让我陌生，甚至恐惧，这样是可以的吗？真的有人在乎吗？</p></blockquote><blockquote><p>七七是coser委托老师。约会中途，趁单主上厕所，七七打电话让亲友送来。单主从洗手间出来，齐司礼抱着花坐在商场的拐角，她看到单主眼睛一下就红了。</p><p>七七会在约会开始前研究单主的朋友圈。一次委托，他看到单主发过一张自己和齐司礼立牌的合影，于是找朋友手绘，裱成一幅画；还有一张单主的自拍，他设置成当天手机屏保和聊天背景。</p></blockquote><blockquote><p>cos委托很容易被理解为一种交易，花钱的单主是甲方，收钱的委托老师是乙方，甲方购买乙方的服务，乙方为甲方提供情绪价值。实际上，在两个女孩之间发生的这种“伪恋爱”并不只是金钱交易，而更像是两个女孩在共同创造一种她们真正需要的亲密关系。</p></blockquote><blockquote><p>单主不会高高在上地享受服务。为了扮演好男性角色，小艾需要给自己穿上十厘米的增高鞋，垫两层沉重的垫肩，气温低的时候也会穿衣服单薄的造型。在她接的五次委托里，每个单主都在约会时关心她的感受：脚累不累，要不要休息？风吹过来冷不冷？这家餐厅你喜欢吗？今天你真的玩得开心吗？</p></blockquote><blockquote><p>一次委托时，单主有事短暂离开，小艾偷偷买了一支玫瑰藏在背后，想给单主惊喜。见面时，小艾发现单主手上拎着一个小蛋糕，是这款游戏和蛋糕店的联名，她专门买了陆沉的款式。她也想给小艾惊喜。</p></blockquote><p>有时看到其他人发的一些恋爱日常，我都会想：「这是真的吗？！这个世界上真的存在这样一种生活吗？！」</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/sIx6fpOVYe1n-ywDwSMi8Q&quot;&gt;《一日男友》&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;被夸奖、被鼓励、被倾听、被看见，我们把对这些事物的渴望投射到“爱”上。“爱”不会天然眷顾每一个人。为了得到它，一些女性四处求索，从手机里到现实中，从二次元到三次元。她们痴迷、成瘾，最终相信自己得到了爱，哪怕是短暂的，明码标价的爱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我在游戏中体验到一种超越现实的理想亲密关系。我们的恋爱从暧昧开始，他会假装不经意地关心我，暗中吃我和别人的醋，我们给彼此起专属的外号。随着了解增加，我发现他其实在很早之前就爱上了我。当然了，他还拥有几乎完美的外貌和身材。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>一个流量很高的冷门网站</title>
    <link href="https://caoyihan.com/2024/05/20/A-website-with-high-traffic/"/>
    <id>https://caoyihan.com/2024/05/20/A-website-with-high-traffic/</id>
    <published>2024-05-20T03:51:31.000Z</published>
    <updated>2024-05-23T15:54:51.605Z</updated>
    
    <content type="html"><![CDATA[<p>偶然发现一个网站 <a href="https://floor796.com/">floor796</a>。</p><p><img src="/../images/796.jpg"></p><p>虽然我还不太知道这个网站有什么用，但我觉得很有意思，而且流量也出奇地高，月访问量超过60万。</p><p><img src="/../images/796traffic.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;偶然发现一个网站 &lt;a href=&quot;https://floor796.com/&quot;&gt;floor796&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/../images/796.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;虽然我还不太知道这个网站有什么用，但我觉得很有意思，而且流量也出奇地高，月</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>卡马克和DOOM</title>
    <link href="https://caoyihan.com/2024/05/19/%E5%8D%A1%E9%A9%AC%E5%85%8B%E5%92%8CDOOM/"/>
    <id>https://caoyihan.com/2024/05/19/%E5%8D%A1%E9%A9%AC%E5%85%8B%E5%92%8CDOOM/</id>
    <published>2024-05-19T10:09:38.000Z</published>
    <updated>2024-05-19T12:27:40.400Z</updated>
    
    <content type="html"><![CDATA[<p>最近读了一本书《DOOM 启示录》，这本书讲述了《DOOM》这款游戏的开发历程，以及其背后的主创之一——约翰·卡马克的故事。</p><p><img src="/../images/%E5%8D%A1%E9%A9%AC%E5%85%8B.jpg" alt="Carmack"></p><h4 id="约翰·卡马克"><a href="#约翰·卡马克" class="headerlink" title="约翰·卡马克"></a>约翰·卡马克</h4><p>约翰·卡马克是《DOOM》这款游戏的主要创作者，也是id Software的联合创始人之一。二十多年前，卡马克凭借《DOOM》在游戏界获得了极高的声誉。</p><p><img src="/../images/littlecat2.jpg"></p><h4 id="卡马克的猫"><a href="#卡马克的猫" class="headerlink" title="卡马克的猫"></a>卡马克的猫</h4><p>卡马克有一只猫，叫咪子，咪子陪伴了他很久，他编程时，猫就趴在电脑上面。甚至他的合伙人罗梅洛，都把咪子放到公司的员工名单中了。</p><p>但后来那只猫脾气变得有点暴躁，总是在办公室闲游乱逛，还把新买的皮沙发尿了一通。</p><p>卡马克就向公司的人宣布，咪子只会给他带来麻烦，他要把咪子送到动物收容所。</p><p>即使他那个合伙人说，咪子送到收容所可能就活不了了，但卡马克不以为然，回到房间继续工作了。</p><p>其他员工要是不合适，他就会踢除，甚至 id Software 的创始人之一罗梅洛，也是卡马克踢除的，因为他认为罗梅洛不再专注了。</p><p><img src="/../images/DOOM.jpg" alt="DOOM"></p><h4 id="卡马克的专注力"><a href="#卡马克的专注力" class="headerlink" title="卡马克的专注力"></a>卡马克的专注力</h4><p>因为卡马克性格就是这样，他写程序时很专注很专注。</p><p>有一次，他同事为了测试卡马克的专注力，在他隔壁放色情片，并把音量调到最大，其他同事很快都被呻吟声吸引到了电视机旁。但卡马克好像一开始没听到，后来听到了，就“嗯？”了一声，并没有停止工作。</p><h4 id="卡马克的黑客精神"><a href="#卡马克的黑客精神" class="headerlink" title="卡马克的黑客精神"></a>卡马克的黑客精神</h4><p>《DOOM 启示录》里提到过很多次：</p><blockquote><p>卡马克清楚地知道，他喜欢的事情就是——编程，他系统地安排着生活，以便把大部分时间都用于此。从制作 DOOM 时起，他就决定开始调整生物钟，以达到一种更孤寂更专注的境界，以避开罗梅洛的尖叫，避开记者的电话，避开所有这些日常生活中使他分心的事物。他开始强迫自己每天睡觉前多熬一个小时，然后第二天再晚一个小时到办公室。1995 年初，他养成了他觉得最理想的作息规律：下午四点到公司，凌晨四点离开。为了 Quake，他得全神贯注才行。</p></blockquote><blockquote><p>卡马克听到艾尔建议他去申请专利后怒不可遏。</p><p>卡马克认为，所有科学技术，以及文化、知识、理论，都是在前人的基础上发展起来的。去注册一项专利，就等于宣布说：”这个想法是我的想法，你不能使用或扩展它，因为，我“拥有”了这个想法，这听起来荒谬绝伦。</p><p>专利制度威胁到他生命中最重要的事情：编写代码去解决问题。如果这个世界上充斥着各种专利，以至于他连解决一个简单的问题都要侵犯到某项专利的话，那么，这将不是他所乐意生活在其中的世界。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近读了一本书《DOOM 启示录》，这本书讲述了《DOOM》这款游戏的开发历程，以及其背后的主创之一——约翰·卡马克的故事。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/../images/%E5%8D%A1%E9%A9%AC%E5%85%8B.jpg&quot; alt=&quot;Carmack&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>张一鸣和他的创业策略</title>
    <link href="https://caoyihan.com/2024/05/18/%E5%BC%A0%E4%B8%80%E9%B8%A3%E5%92%8C%E4%BB%96%E7%9A%84%E5%88%9B%E4%B8%9A%E7%AD%96%E7%95%A5/"/>
    <id>https://caoyihan.com/2024/05/18/%E5%BC%A0%E4%B8%80%E9%B8%A3%E5%92%8C%E4%BB%96%E7%9A%84%E5%88%9B%E4%B8%9A%E7%AD%96%E7%95%A5/</id>
    <published>2024-05-18T10:16:46.000Z</published>
    <updated>2024-05-18T10:16:46.208Z</updated>
    
    <content type="html"><![CDATA[<p>阑夕在<a href="https://tech.sina.com.cn/csj/2018-11-17/doc-ihnyuqhh6042529.shtml">《理性蜕变中的张一鸣》</a>里说：</p><blockquote><ul><li>黄章晋说，张一鸣的创业项目是区分人的筛子，被他捕获的，是自我塑造意识薄弱，延迟满足能力低下，很难在现实世界获得成就奖赏的人，用饭桌上的话来说就是，他们的时间和生命不值钱，是我们给了他们幸福感。</li><li>创业可以分为两种，一种是比较感性的，知行合一的。做的事情就是自己真心认同并热爱的。另一种是理性的，是从逻辑判断某个市场存在机会，然后调度一切资源进入谋求成功，自己是否对这件事情抱有兴趣，倒是非必要的。显而易见，张一鸣属于后一种创业者。他绝对不会是今日头条和抖音上的内容消费者，甚至恰恰相反。</li><li>认识张一鸣十几年的大学室友说这个人像机器一样，“不打牌，不看碟，也不玩游戏，读了四年大学，除了上课、看书，他的业余活动就是写代码和修电脑。显然，如果张一鸣在他的大学时代遇到今日头条，恐怕连下载按钮都不会去点。</li><li>张一鸣甚至很清醒的表达过一个现在看来相当残酷的观点：人可以分为两类，一类是追求效率的少数精英，他们可以在现实生活里实现自我认知，另一类则是大部分需要围绕一个东西打转的人，不管这些东西是宗教、小说、爱情还是今日头条，用户需要沉迷其中。</li><li>张一鸣说，RSS模式对于用户是不友善的，RSS要求用户具备相当高的信息组织能力，而且还要足够自律，在信息匮乏和信息过载之间获得平衡，而普通用户是做不到的。——这篇日志没有给他刚刚开始做的今日头条打半个字的广告，但指向性已经相当明确，因为判断用户需要信息饲养，这才有了今日头条的横空出世。</li></ul></blockquote><p>其实也给我的其启示是，有时创业确实应该瞄准更广大的普罗大众，而不是少数过于精英的人。</p><p>前一阵子还看到github上一个<a href="https://github.com/1c7/chinese-independent-developer">中国独立开发者项目列表</a>，给我的感觉是，大部分程序员做的项目，实在太小众了，比方说很多rss相关的，很多生产力工具。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;阑夕在&lt;a href=&quot;https://tech.sina.com.cn/csj/2018-11-17/doc-ihnyuqhh6042529.shtml&quot;&gt;《理性蜕变中的张一鸣》&lt;/a&gt;里说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;黄章晋说，张一鸣的创业项目</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>极简设计和用户体验</title>
    <link href="https://caoyihan.com/2024/05/17/%E6%9E%81%E7%AE%80%E8%AE%BE%E8%AE%A1%E5%92%8C%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    <id>https://caoyihan.com/2024/05/17/%E6%9E%81%E7%AE%80%E8%AE%BE%E8%AE%A1%E5%92%8C%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/</id>
    <published>2024-05-17T03:48:56.000Z</published>
    <updated>2024-05-19T11:55:33.281Z</updated>
    
    <content type="html"><![CDATA[<p>上次读到<a href="https://www.ruanyifeng.com/blog/2022/07/weekly-issue-216.html">《极简主义的胜利》</a>，也发现很多网站产品的风格很类似，包括网页和logo。比如都是极简风格，比较喜欢用蓝色或紫色。其余的装饰比较少。</p><p>比如：Glitter AI</p><p><img src="/../images/GlitterAI.png" alt="Glitter AI"></p><p>Supabase</p><p><img src="/../images/supabase.png" alt="Supabase"></p><p>Jira logo</p><p><img src="https://jira.agileassets.com/images/atlassian-jira-logo-large.png" alt="Atlassian Jira and Jira Plugins - Jira"></p><p>我之前觉得，千篇一律的设计太无聊了，为什么他们不能差异化地做出一些不同的设计呢？</p><p>最近读了《华与华方法》，似乎找到了原因。</p><p>一切创意的创作原则也是降低成本，降低识别成本，记忆成本，阅读城堡，理解成本，传播成本。因为创意本身不是目的，创意是要解决问题的。比如一家银行的logo，首先要和餐馆区分开，要让用户第一眼看到的时候，就知道是银行。其次才是和其他银行区分开。所以大多数银行的logo设计里，都有一个铜钱。</p><p>各种网站的设计也是这样。首先需要让用户一目了然，用标题，落地页和正文，快速告诉用户这个网站是做什么的，然后才是美学上的设计。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上次读到&lt;a href=&quot;https://www.ruanyifeng.com/blog/2022/07/weekly-issue-216.html&quot;&gt;《极简主义的胜利》&lt;/a&gt;，也发现很多网站产品的风格很类似，包括网页和logo。比如都是极简风格，比较喜欢用蓝色或紫色。其</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>文摘</title>
    <link href="https://caoyihan.com/2024/05/15/%E6%96%87%E6%91%98/"/>
    <id>https://caoyihan.com/2024/05/15/%E6%96%87%E6%91%98/</id>
    <published>2024-05-15T07:47:24.000Z</published>
    <updated>2024-06-07T09:47:41.091Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://cdixon.org/2010/09/12/if-you-arent-getting-rejected-on-a-daily-basis-your-goals-arent-ambitious-enough">《如果你没有日常地被拒绝，说明你的目标仍然野心不够》</a> 有时雇主拒绝你，可能有各种各样的原因，并不代表你这个人不行。像找工作这种事，只需要找到最好的一个就可以了，而不是很多工作的平均值。——2024.6.7</p><p>这篇<a href="https://4ark.me/posts/2024-01-01-2023-summary/">文章</a>，作者记述了他偶然创作的小插件获得成功的故事:</p><blockquote><p>机缘巧合下，我为帮助一位朋友解决他所面临的问题，用相近一个小时写了个插件。出乎意料的是，这个插件竟然在接下来的数个月里为我带来了远超日常工资的额外收入。</p><p>这个插件技术含量并不高，对任何程序员来说都是易如反掌的事情，但对普通人来说，它能让成本降低无数倍，所以他们拥有强烈的付费意愿，最终一传十、十传百，很快，我的微信好友从 200 人不到变成 1000+。</p></blockquote><p>——2024.5.15</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://cdixon.org/2010/09/12/if-you-arent-getting-rejected-on-a-daily-basis-your-goals-arent-ambitious-enough&quot;&gt;《如果你没有日常地被拒绝，说明你</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>纪念陈皓</title>
    <link href="https://caoyihan.com/2024/05/12/%E7%BA%AA%E5%BF%B5%E9%99%88%E7%9A%93/"/>
    <id>https://caoyihan.com/2024/05/12/%E7%BA%AA%E5%BF%B5%E9%99%88%E7%9A%93/</id>
    <published>2024-05-12T14:47:52.000Z</published>
    <updated>2024-05-12T16:17:19.949Z</updated>
    
    <content type="html"><![CDATA[<p>2023年5月15日，偶然在 Twitter 上看到陈皓的讣告，但当时我还未曾听说过他，就在谷歌查了一下，因此就偶然知道了他的博客——<a href="https://coolshell.cn/">酷壳</a>。</p><p><img src="/../images/%E9%99%88%E7%9A%93.png" alt="陈皓"></p><p>读陈皓的博客，会真的很感慨。他的博客的内容比较丰富，不仅有很多技术文章，也有一些承载着很强烈观点的文章。而且博客也写得非常好，通过它，再沿着各种外链顺藤摸瓜，可以很完整地接触到他的思想和价值观。</p><p>举一个例子，他写过<a href="https://coolshell.cn/articles/19464.html">《如何超过大多数人》</a>，里面写到</p><blockquote><p>要超过别人其实还是比较简单的，尤其在今天的中国，更是简单。因为，你只看看中国的互联网，你就会发现，他们基本上全部都是在消费大众，让大众变得更为地愚蠢和傻瓜。所以，在今天的中国，你基本上不用做什么，只需要不使用中国互联网，你就很自然地超过大多数人了。当然，如果你还想跟他们彻底拉开，甩他们几个身位，把别人打到底层，下面的这些“技巧”你要多多了解一下。</p><p>在信息获取上，你要不断地向大众鼓吹下面的这些事：</p><p>让大家都用百度搜索引擎查找信息，订阅微信公众号或是到知乎上学习知识……要做到这一步，你就需要把“百度一下”挂在嘴边，然后要经常在群或朋友圈中转发微信公众号的文章，并且转发知乎里的各种“如何看待……”这样的文章，让他们爱上八卦，爱上转发，爱上碎片。</p><p>让大家到微博或是知识星球上粉一些大咖，密切关注他们的言论和动向……是的，告诉大家，大咖的任何想法一言一行都可以在微博、朋友圈或是知识星球上获得，让大家相信，你的成长和大咖的见闻和闲扯非常有关系，你跟牛人在一个圈子里你也会变牛。</p><p>把今日头条和抖音这样的APP推荐给大家……你只需要让你有朋友成功地安装这两个APP，他们就会花大量的时间在上面，而不能自拔，要让他们安装其实还是很容易的，你要不信你就装一个试玩一会看看（嘿嘿嘿）。</p></blockquote><p>陈皓还提出了很多警告：</p><blockquote><ol><li>不要混淆认知和知识，以为开阔认知就是学习</li><li>不要使用碎片时间学习，习惯利用碎片时间吃快餐后，就会失去精读一本书的耐性。</li><li>玩具手枪是易用的，重武器是难以操控的，多给他们一些玩具，这样他们就会对玩具玩地得心应手，觉得玩玩具就是自己的专业。</li></ol></blockquote><p>这篇文章，不仅是有效的心灵鸡汤，很能让人缓解焦虑，而且也指出了我平时很多司空见惯，但实际上有害的做法。比如我现在摆弄各种玩具多了，就发现已经忘了很多之前本科学的重武器，很多数学定理已经记不太清了。</p><p>陈皓还有一些观点，比如他说，<a href="https://coolshell.cn/articles/9308.html">「作环保的程序员，从不用百度开始」</a>，我之前虽然对百度没有感情，但后来发现向百度提交站点地图都极度麻烦，而且即使主动提交了网站，百度仍然没有收录我的个人网站，就会想起陈皓的那篇文章，感慨百度还在自暴自弃；<a href="https://coolshell.cn/articles/18360.html">「程序员练级攻略」</a>介绍了学习金字塔和主动学习的重要性，我也是深受此影响，因此即使很麻烦，仍然搭建了个人博客，并坚持输出，把自己学到的知识教给别人。</p><p>陈皓对我影响深远，想说的太多，却又说不出话来，谨以此文纪念陈皓！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2023年5月15日，偶然在 Twitter 上看到陈皓的讣告，但当时我还未曾听说过他，就在谷歌查了一下，因此就偶然知道了他的博客——&lt;a href=&quot;https://coolshell.cn/&quot;&gt;酷壳&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/../images/%E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>华与华的品牌出事论</title>
    <link href="https://caoyihan.com/2024/05/12/%E5%8D%8E%E4%B8%8E%E5%8D%8E%E7%9A%84%E5%93%81%E7%89%8C%E5%87%BA%E4%BA%8B%E8%AE%BA/"/>
    <id>https://caoyihan.com/2024/05/12/%E5%8D%8E%E4%B8%8E%E5%8D%8E%E7%9A%84%E5%93%81%E7%89%8C%E5%87%BA%E4%BA%8B%E8%AE%BA/</id>
    <published>2024-05-11T16:25:19.000Z</published>
    <updated>2024-05-11T16:51:07.016Z</updated>
    
    <content type="html"><![CDATA[<p>品牌出现负面舆论，我自然而然的想法也是应该去压舆论控评，降低负面影响。</p><p>但最近读了<a href="https://book.douban.com/subject/35079917/">《华与华方法》</a>，书中有一个理论，「品牌出事论·品牌失灵论」，很有意思，分享给大家。</p><p>品牌出事论，指品牌就是为了出事而生的，如果不出事，就不需要品牌了。</p><p>品牌失灵论，指品牌出事时，主动认错并买单，则品牌有效，反之，如果出事了不承认，甚至抵赖删帖，想办法压舆论，那么品牌就是失灵的。</p><p>例如，一些网店卖了假冒伪劣产品，被封了换个号继续卖，因为他们的品牌本身没有价值，可以随意抛弃，相当于出事了并没有为错误买单。而一些大品牌，要是出事了，可能会毁掉整个品牌。因此更有动力提供好产品。</p><p>作者认为，</p><ol><li><p>品牌出事时，应该马上认错，接受惩罚，甚至可以加大对自己的惩罚，这样就是最佳品牌，可以赢得顾客的信任。</p></li><li><p>维持完美人设没有好处，因为很容易崩塌，会加大风险。</p></li><li><p>会投诉的用户，是最好的用户。用户投诉的时候，就是你赢得终身终身用户的时候。因为你只要倾听用户的投诉，并解决他的问题，甚至给予一定的补偿，他就会终身信任你。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;品牌出现负面舆论，我自然而然的想法也是应该去压舆论控评，降低负面影响。&lt;/p&gt;
&lt;p&gt;但最近读了&lt;a href=&quot;https://book.douban.com/subject/35079917/&quot;&gt;《华与华方法》&lt;/a&gt;，书中有一个理论，「品牌出事论·品牌失灵论」，很有意</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>「食贫道」和对内容的思考</title>
    <link href="https://caoyihan.com/2024/05/09/%E3%80%8C%E9%A3%9F%E8%B4%AB%E9%81%93%E3%80%8D%E5%92%8C%E5%AF%B9%E5%86%85%E5%AE%B9%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>https://caoyihan.com/2024/05/09/%E3%80%8C%E9%A3%9F%E8%B4%AB%E9%81%93%E3%80%8D%E5%92%8C%E5%AF%B9%E5%86%85%E5%AE%B9%E7%9A%84%E6%80%9D%E8%80%83/</id>
    <published>2024-05-09T07:08:11.000Z</published>
    <updated>2024-05-09T07:08:11.593Z</updated>
    
    <content type="html"><![CDATA[<p>前一阵子偶然发现一个B站up主「食贫道」，做出了很多很有深度的视频，比如「迦南孤儿」，进入战时的以色列，从不同的角度介绍加以冲突；「迷失东京」，选题居然选了日本黑帮，日本风俗业等题材。</p><p>最近正好读到一篇「食贫道」对内容的思考：</p><ul><li><p>我对自己的定位一个“正能量硬核美食up主”，正能量是对自己的要求，“硬核”则是希望通过美食来传递不一样的内容。</p></li><li><p>事实上，我们到现在做片子都没有脚本，完全是即兴、靠对现场的感觉和冲动，怎么想就怎么干了。然后在后期再去探索自己情绪的爆发点，朝爆发点上使劲儿。</p><p>这其实跟我的工作经历也有关，做调查记者的时候，是不能写脚本的——那叫主题先行，所以，其实即便是做美食，过去做内容的感觉还在——在生活中找热点，到现场去捕捉细节，然后在观众的反馈中寻找答案。</p><p>然后一开始，主要都是关注哪些饭店有哪些好吃的，虽然很开心，但是开心之余会有落寞吧，会觉得自己做的“太轻”了，自己的创作意图和心愿，不止是美食那么简单。其实食物是人类生活赖以生存的基础，透过食物，应该有更多的情感、理念、意义去表达，所以后面就开始想做特别节目。（如果能想到，能投过食物来传达更深层次的东西，内容也会变得更有深度）</p></li><li><p>「有意义的内容」：首先要明确，自媒体是为谁服务的？可能说起来有些人会觉得很冠冕堂皇，但我认为内容创作者就是为人民服务的。这是一个基本概念，不管你是路边说书的，还是自媒体搞直播的，你为公众生产内容，就应该明确这个位置和导向，如果偏离了这个，那么早晚就会出问题。（这里感觉「人民」的概念好宽泛，不再细分一下市场吗？）</p></li><li><p>「消费场景」：你的视频是谁在看？在哪里看？什么时候看？这个问题的答案，决定了受众的痛点，决定了选题的方向，再进一步，决定了曝光量、阅转比、转化率。</p><p>以美食为例，很多美食吃播视频消费的场景是大家吃饭的时候。出于人类本能的需求，美食视频本身食物的特写、主播吃的很香吃的很多，甚至吃得吧唧吧唧，都可以极大地促进受众的食欲。在这种消费场景下，我们出现了大胃王等各种吃播。但问题是随着能吃的人一代一代出，你一年能吃那么多，能连续不停吃下去吗？仅仅依靠消费场景和视觉刺激，繁荣是长久的吗？这势必要寻找自己更有内涵的人设和内容，才能让观众始终保持对你的关注。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前一阵子偶然发现一个B站up主「食贫道」，做出了很多很有深度的视频，比如「迦南孤儿」，进入战时的以色列，从不同的角度介绍加以冲突；「迷失东京」，选题居然选了日本黑帮，日本风俗业等题材。&lt;/p&gt;
&lt;p&gt;最近正好读到一篇「食贫道」对内容的思考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
